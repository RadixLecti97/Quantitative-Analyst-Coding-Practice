"""
You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.

You may assume that you have an infinite number of each kind of coin.
"""

#First attempt - Brute Force No Recursion 46/182 Test Cases Passed
class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        total = 0
        
        coins.sort(reverse = True)
        
        for i in coins:
            carry=0 #carry needs to reset (remainder does not add on previous remainders)
            
            total += amount//i
            carry += amount%i
            amount = carry
            
        if (amount !=0):
            return -1
        else:
            return total
            
#Second attempt - Dynamic Programming            
